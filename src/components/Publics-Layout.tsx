import { useEffect, useState } from "react";
import { TItem, TPanel } from "./Classes";
import { getData, Store } from "./Store";
import { IonButton, IonCard, IonIcon, IonInput, IonLabel, IonModal } from "@ionic/react";
import { chatboxOutline, closeOutline, cloudDownloadOutline, cloudUploadOutline, createOutline, trashOutline } from "ionicons/icons";


import React from 'react';
import styles from './AvailableOrders.module.css';
import DriverCard from "./card/DriverCard";

const OrderCard = ({ type, price, id, from, to, loadDate, unloadDate }) => {
    const typeLabel = type === 'new' ? '–ù–æ–≤—ã–π' : '–¢–æ—Ä–≥';
    const typeClass = type === 'new' ? styles.new : styles.bargain;

    return (
        <div className={styles.card}>
            <div className={styles.header}>
                <div>
                    <span className={`${styles.label} ${typeClass}`}>{typeLabel}</span>

                    <span className={styles.id}>ID:{id}</span>
                </div>
                <span className={styles.price}>‚ÇΩ {price.toLocaleString()}</span>
            </div>

            <h3 className={styles.title}>–ü–µ—Ä–µ–≤–æ–∑–∫–∞ –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è</h3>

            <div className={styles.route}>
                <div className={styles.routeContainer}>
                    <span className={styles.icon}>üìç</span>
                    <div className={styles.toTextContainer}>
                        <div className={styles.toTextHeader}>–û—Ç–∫—É–¥–∞</div>
                        <strong className={styles.toText}>{from}</strong>
                    </div>
                </div>
                <div className={styles.routeContainerGrid}>
                    <span className={styles.labelText}>–î–∞—Ç–∞ –∑–∞–≥—Ä—É–∑–∫–∏:</span>
                    <div><strong className={styles.timeDate}>{loadDate}</strong> <span className={styles.time}>13:00 - 15:00</span></div>
                </div>
            </div>

            <div className={styles.route}>
                <div className={styles.routeContainer}>
                    <span className={styles.icon}>üìç</span>
                    <div className={styles.toTextContainer}>
                        <div className={styles.toTextHeader}>–ö—É–¥–∞</div>
                        <strong className={styles.toText}>{to}</strong>
                    </div>
                </div>
                <div className={styles.routeContainerGrid}>
                    <span className={styles.labelText}>–î–∞—Ç–∞ –≤—ã–≥—Ä—É–∑–∫–∏:</span>
                    <div><strong className={styles.timeDate}>{unloadDate}</strong> <span className={styles.time}>13:00 - 15:00</span></div>
                </div>
            </div>

            <div className={styles.details}>
                <span className={styles.detailsTitle}>–î–µ—Ç–∞–ª–∏ –≥—Ä—É–∑–∞:</span>
                <div className={styles.detailsDesc}>
                    –ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ, –æ–±—â–∏–π –≤–µ—Å –æ–∫–æ–ª–æ 15 —Ç–æ–Ω–Ω. –¢—Ä–µ–±—É–µ—Ç—Å—è —Ç—è–≥–∞—á —Å –ø–æ–ª—É–ø—Ä–∏—Ü–µ–ø–æ–º –∏ –æ–ø—ã—Ç –ø–µ—Ä–µ–≤–æ–∑–∫–∏ –Ω–µ–≥–∞–±–∞—Ä–∏—Ç–Ω—ã—Ö –≥—Ä—É–∑–æ–≤.
                </div>
            </div>

            <div className={styles.buttons}>
                <button className={styles.contactBtn}>–°–≤—è–∑–∞—Ç—å—Å—è —Å –∑–∞–∫–∞–∑—á–∏–∫–æ–º</button>
                <button className={styles.offerBtn}>–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Å–≤–æ—é —Ü–µ–Ω—É</button>
            </div>
        </div>
    );
};

const PublicsLayouts = () => {
    return (
        <div className={styles.container}>
            <h2 className={styles.heading}>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∑–∞–∫–∞–∑—ã</h2>
            <OrderCard
                type="new"
                price={120000}
                id="12460"
                from="–ö–∞–∑–∞–Ω—å"
                to="–£—Ñ–∞"
                loadDate="01.04.2025"
                unloadDate="03.04.2025"
            />
            <OrderCard
                type="bargain"
                price={120000}
                id="12460"
                from="–ö–∞–∑–∞–Ω—å"
                to="–£—Ñ–∞"
                loadDate="01.04.2025"
                unloadDate="03.04.2025"
            />
            <DriverCard />
        </div>
    );
}
export default PublicsLayouts