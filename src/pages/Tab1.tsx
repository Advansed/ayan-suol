import { IonButton, IonContent, IonModal, IonPage, IonRefresher, IonRefresherContent } from '@ionic/react';
import './Tab1.css';
import { Cargos }     from '../components/Cargos/';
import { Store }      from '../components/Store';
import { useState }   from 'react';
import socketService  from '../components/Sockets';
import { arrowUpCircleOutline } from 'ionicons/icons';
import { Works } from '../components/Works';

const Tab1: React.FC = () => {
  const [ message, setMessage ] = useState("");
  const [ swap, setSwap ] = useState( Store.getState().swap )
  
  Store.subscribe({ num: 501, type: "error", func: () => {
    console.log(Store.getState().error);
    setMessage(Store.getState().error);
  }});

  Store.subscribe({ num: 502, type: "swap", func: () => {
    setSwap( Store.getState().swap );
    console.log("swap 502")
    console.log(Store.getState().swap)
  }});
   
  

  // –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
  const handleRefresh = async (event: CustomEvent) => {
    try {
        console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö...');
      
      const token = Store.getState().login?.token;
      
      if (!token) {
        console.error('‚ùå –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω');
        event.detail.complete();
        return;
      }

      // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      if (swap) {
        // –î–ª—è –≤–æ–¥–∏—Ç–µ–ª–µ–π –æ–±–Ω–æ–≤–ª—è–µ–º —Ä–∞–±–æ—Ç—ã –∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç
        console.log('üöõ –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤–æ–¥–∏—Ç–µ–ª—è...');
        socketService.emit("get_works", { token: token });
        console.log('emit... get_works');
        socketService.emit("get_transport", { token: token });
        console.log('emit... get_transport');
      } else {
        // –î–ª—è –∑–∞–∫–∞–∑—á–∏–∫–æ–≤ –æ–±–Ω–æ–≤–ª—è–µ–º –≥—Ä—É–∑—ã
        console.log('üì¶ –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—á–∏–∫–∞...');
        socketService.emit("get_cargos", { token });
        console.log('üì¶ emit... get_cargos');
      }

      // –¢–∞–∫–∂–µ –æ–±–Ω–æ–≤–ª—è–µ–º –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      socketService.emit("get_orgs", { token });

      // –ó–∞–≤–µ—Ä—à–∞–µ–º —Ä–µ—Ñ—Ä–µ—à–µ—Ä —á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –ª—É—á—à–µ–≥–æ UX
      setTimeout(() => {
        console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
        event.detail.complete();
      }, 1000);

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
      event.detail.complete();
    }
  };

  return (
    <IonPage>
      <IonContent className='bg-2'>
        {/* –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Ä–µ—Ñ—Ä–µ—à–µ—Ä–∞ */}
        {/* <IonRefresher 
          className='bg-2'
          slot="fixed" 
          onIonRefresh={handleRefresh}
          pullFactor={0.5}
          pullMin={100}
          pullMax={200}
        >
          <IonRefresherContent
            className='bg-2'
            pullingIcon={ arrowUpCircleOutline }
            pullingText={swap ? "–ü–æ—Ç—è–Ω–∏—Ç–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç..." : "–ü–æ—Ç—è–Ω–∏—Ç–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤..."}
            refreshingSpinner="circular"
            refreshingText="–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ..."
          />
        </IonRefresher> */}

        {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
        {
          swap
            ? <Works />
            : <Cargos />
        }
      </IonContent>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –æ—à–∏–±–æ–∫ */}
      <IonModal
        isOpen={message !== ""}
        onDidDismiss={() => setMessage("")}
        className="error-modal"
      >
        <div className="error-modal-container">
          <div className="error-modal-content">
            <div className="error-modal-title">–û—à–∏–±–∫–∞</div>
            <div className="error-modal-message">{message}</div>
            <IonButton
              className="error-modal-button"
              expand="block"
              onClick={() => setMessage("")}
            >
              –ó–∞–∫—Ä—ã—Ç—å
            </IonButton>
          </div>
        </div>
      </IonModal>
    </IonPage>
  );
};

export default Tab1;