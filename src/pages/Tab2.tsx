import { IonContent, IonPage, IonRefresher, IonRefresherContent } from '@ionic/react';
import './Tab2.css';
import { Store } from '../components/Store';
import { useParams } from 'react-router';
import { Chats } from '../components/Chats';
import { ChatList } from '../components/ChatList';
import socketService from '../components/Sockets';
import { arrowUpCircleOutline} from 'ionicons/icons';

const Tab2: React.FC = () => {
  const swap = Store.getState().swap;

  const { name } = useParams<{ name: string; }>();
  
  // –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
  const handleRefresh = async (event: CustomEvent) => {
    try {
      console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö...');
      
      const token = Store.getState().login?.token;
      
      if (!token) {
        console.error('‚ùå –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω');
        event.detail.complete();
        return;
      }

      // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      if (name === undefined) {
        console.log('üöõ –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤...');
        socketService.emit("get_chats", { token: token });
        console.log('emit... get_chats');
      } else {
        console.log('üí¨ –û–±–Ω–æ–≤–ª—è–µ–º —á–∞—Ç...');
        // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—É—é –ª–æ–≥–∏–∫—É –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —á–∞—Ç–∞
        const arr = name.split(":");
        socketService.emit("get_chat", {
          token: token,
          recipient: arr[0],
          cargo: arr[1]
        });
        console.log('emit... get_chat');
      }

      // –ó–∞–≤–µ—Ä—à–∞–µ–º —Ä–µ—Ñ—Ä–µ—à–µ—Ä —á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –ª—É—á—à–µ–≥–æ UX
      setTimeout(() => {
        console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
        event.detail.complete();
      }, 1000);

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
      event.detail.complete();
    }
  };

  return (
    <IonPage>
      <IonContent>
        {/* –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Ä–µ—Ñ—Ä–µ—à–µ—Ä–∞ */}
        
        <IonRefresher
          className='bg-2'
          slot="fixed" 
          onIonRefresh={handleRefresh}
          pullFactor={0.5}
          pullMin={100}
          pullMax={200}
        >
          <IonRefresherContent
            className='bg-2'
            pullingIcon= { arrowUpCircleOutline}
            pullingText={swap ? "–ü–æ—Ç—è–Ω–∏—Ç–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç..." : "–ü–æ—Ç—è–Ω–∏—Ç–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤..."}
            refreshingSpinner="circular"
            refreshingText="–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ..."
          />
        </IonRefresher>

        {

          name === undefined

            ? <ChatList />

            : <Chats name = { name } />

        }
      </IonContent>
    </IonPage>
  );
};

export default Tab2;
